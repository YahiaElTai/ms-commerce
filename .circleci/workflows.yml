version: 2.1

orbs:
  node: circleci/node@5.0.3
  gcp-cli: circleci/gcp-cli@2.4.1
  gcp-gcr: circleci/gcp-gcr@0.15.0
  shellcheck: circleci/shellcheck@3.1.2

parameters:
  trigger_cart:
    type: boolean
    default: false
  trigger_auth:
    type: boolean
    default: false
  trigger_infra:
    type: boolean
    default: false

executors:
  gcp-executor:
    docker:
      - image: cimg/gcp:2022.11
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
  node-executor:
    docker:
      - image: cimg/node:18.12.1

commands:
  install_packages_for_service:
    parameters:
      app-dir:
        type: string
    steps:
      - node/install-packages:
          app-dir: ./services/<< parameters.app-dir >>
jobs:
  lint_and_typecheck:
    executor: node-executor
    parameters:
      app-dir:
        type: string
    steps:
      - checkout
      - shellcheck/check:
          dir: ./.circleci
      - node/install-packages
      - run:
          name: lint all services
          command: npm run lint
      - install_packages_for_service:
          app-dir: << parameters.app-dir >>
      - run:
          command: cd ./services/<< parameters.app-dir >> && npm run typecheck
          name: Typecheck services/<< parameters.app-dir >>
  test:
    executor: node-executor
    parameters:
      app-dir:
        type: string
    steps:
      - checkout
      - run:
          name: Setup machine
          command: bash ./.circleci/install-libssl.sh
      - install_packages_for_service:
          app-dir: << parameters.app-dir >>
      - run:
          command: cd ./services/<< parameters.app-dir >> && npm run test:ci
          name: Run tests ./services/<< parameters.app-dir >>
  build_and_deploy:
    executor: gcp-executor
    parameters:
      service:
        type: string
    steps:
      - checkout
      - run:
          name: Initialize gcloud CLI
          command: bash ./.circleci/gcloud-initialize.sh
      - run:
          name: Authenticate Docker with gcloud
          command: gcloud auth configure-docker --quiet $REGISTRY_URL
      - setup_remote_docker:
          docker_layer_caching: true
      - gcp-gcr/build-image:
          docker-context: ./services/<< parameters.service >>
          image: $REPO_NAME/<< parameters.service >>
          path: ./services/<< parameters.service >>
          registry-url: $REGISTRY_URL
      - gcp-gcr/push-image:
          image: $REPO_NAME/<< parameters.service >>
          registry-url: $REGISTRY_URL
      - run:
          name: Rollout new << parameters.service >> deployment
          command: bash ./.circleci/kubernetes.sh
          environment:
            OPERATION: rollout
            SERVICE_NAME: << parameters.service >>
  deploy_manifests:
    executor: gcp-executor
    steps:
      - checkout
      - gcp-cli/initialize
      - run:
          name: Apply all k8s manifests
          command: bash ./.circleci/kubernetes.sh
          environment:
            OPERATION: apply

workflows:
  test_cart_branch:
    when:
      and:
        - not:
            matches:
              pattern: '^main$'
              value: << pipeline.git.branch >>
        - equal: [true, << pipeline.parameters.trigger_cart >>]
    jobs:
      - lint_and_typecheck:
          name: lint_and_typecheck_cart
          app-dir: cart
      - test:
          name: test_cart
          app-dir: cart
          requires:
            - lint_and_typecheck_cart
  test_auth_branch:
    when:
      and:
        - not:
            matches:
              pattern: '^main$'
              value: << pipeline.git.branch >>
        - equal: [true, << pipeline.parameters.trigger_auth >>]
    jobs:
      - lint_and_typecheck:
          name: lint_and_typecheck_auth
          app-dir: auth
      - test:
          name: test_auth
          app-dir: auth
          requires:
            - lint_and_typecheck_auth

  test_and_deploy_cart:
    when:
      and:
        - equal: [main, << pipeline.git.branch >>]
        - equal: [true, << pipeline.parameters.trigger_cart >>]
    jobs:
      - lint_and_typecheck:
          name: lint_and_typecheck_cart
          app-dir: cart
      - test:
          name: test_cart
          app-dir: cart
          requires:
            - lint_and_typecheck_cart
      - build_and_deploy:
          name: build_and_deploy_cart
          service: cart
          requires:
            - test_cart
      - can_deploy_manifests:
          type: approval
      - deploy_manifests:
          requires:
            - can_deploy_manifests
  test_and_deploy_auth:
    when:
      and:
        - equal: [main, << pipeline.git.branch >>]
        - equal: [true, << pipeline.parameters.trigger_auth >>]
    jobs:
      - lint_and_typecheck:
          name: lint_and_typecheck_auth
          app-dir: auth
      - test:
          name: test_auth
          app-dir: auth
          requires:
            - lint_and_typecheck_auth
      - build_and_deploy:
          name: build_and_deploy_auth
          service: auth
          requires:
            - test_auth
      - can_deploy_manifests:
          type: approval
      - deploy_manifests:
          requires:
            - can_deploy_manifests
  deploy_manifests_if_changed:
    when:
      and:
        - equal: [main, << pipeline.git.branch >>]
        - equal: [true, << pipeline.parameters.trigger_infra >>]
    jobs:
      - can_deploy_manifests:
          type: approval
      - deploy_manifests:
          requires:
            - can_deploy_manifests
