version: 2.1

orbs:
  node: circleci/node@5.0.3
  gcp-cli: circleci/gcp-cli@2.4.1
  gcp-gcr: circleci/gcp-gcr@0.15.0
  path-filtering: circleci/path-filtering@0.1.3

parameters:
  trigger_cart:
    type: boolean
    default: false
  trigger_auth:
    type: boolean
    default: false
  trigger_infra:
    type: boolean
    default: false

executors:
  gcp-executor:
    docker:
      - image: cimg/gcp:2022.11
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
  node-executor:
    docker:
      - image: cimg/node:18.12.1

jobs:
  test:
    executor: node-executor
    parameters:
      app-dir:
        type: string
    steps:
      - checkout
      - run:
          name: Setup machine
          command: wget http://nz2.archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb && sudo dpkg -i libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb
      - node/install-packages:
          app-dir: << parameters.app-dir >>
      - run:
          command: cd << parameters.app-dir >> && npm run test:ci
          name: Run tests << parameters.app-dir >>
  build_and_deploy:
    executor: gcp-executor
    parameters:
      service:
        type: string
    steps:
      - checkout
      - gcp-cli/initialize
      - run:
          name: Authenticate Docker with gcloud
          command: gcloud auth configure-docker --quiet $REGISTRY_URL
      - setup_remote_docker:
          docker_layer_caching: true
      - gcp-gcr/build-image:
          docker-context: ./<< parameters.service >>
          image: $REPO_NAME/<< parameters.service >>
          path: ./<< parameters.service >>
          registry-url: $REGISTRY_URL
      - gcp-gcr/push-image:
          image: $REPO_NAME/<< parameters.service >>
          registry-url: $REGISTRY_URL
      - run:
          name: Connect to cluster
          command: gcloud container clusters get-credentials $CLUSTER_NAME --zone $GOOGLE_COMPUTE_ZONE --project $GOOGLE_PROJECT_ID
      - run:
          name: Rollout new cart deployment
          command: kubectl rollout restart deployment << parameters.service >>-depl
  deploy_manifests:
    executor: gcp-executor
    steps:
      - checkout
      - gcp-cli/initialize
      - run:
          name: Connect to cluster
          command: gcloud container clusters get-credentials $CLUSTER_NAME --zone $GOOGLE_COMPUTE_ZONE --project $GOOGLE_PROJECT_ID
      - run:
          name: Apply all k8s manifests
          command: kubectl apply -f infra/k8s

workflows:
  test_cart_branch:
    when:
      and:
        - not:
            matches:
              pattern: "^main$"
              value: << pipeline.git.branch >>
        - equal: [true, <<paramaters.trigger_cart >>]
    jobs:
      - test:
          name: test_cart
          app-dir: cart
  test_auth_branch:
    when:
      and:
        - not:
            matches:
              pattern: "^main$"
              value: << pipeline.git.branch >>
        - equal: [true, <<paramaters.trigger_auth >>]
    jobs:
      - test:
          name: test_auth
          app-dir: auth

  test_and_deploy_cart:
    when:
      and:
        - equal: [main, << pipeline.git.branch >>]
        - equal: [true, <<paramaters.trigger_cart >>]
    jobs:
      - test:
          name: test_cart
          app-dir: cart
      - build_and_deploy:
          name: build_and_deploy_cart
          service: cart
          requires:
            - test_cart
      - can_deploy_manifests:
          type: approval
      - deploy_manifests:
          requires:
            - can_deploy_manifests
  test_and_deploy_auth:
    when:
      and:
        - equal: [main, << pipeline.git.branch >>]
        - equal: [true, <<paramaters.trigger_auth >>]
    jobs:
      - test:
          name: test_auth
          app-dir: auth
      - build_and_deploy:
          name: build_and_deploy_auth
          service: auth
          requires:
            - test_auth
      - can_deploy_manifests:
          type: approval
      - deploy_manifests:
          requires:
            - can_deploy_manifests
  deploy_manifests:
    when:
      and:
        - equal: [main, << pipeline.git.branch >>]
        - equal: [true, <<paramaters.trigger_infra >>]
    jobs:
      - can_deploy_manifests:
          type: approval
      - deploy_manifests:
          requires:
            - can_deploy_manifests
